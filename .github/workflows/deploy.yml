name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Only deploy on push to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create custom domain
        run: npx serverless create_domain --stage production
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BRANDDEV_API_KEY: ${{ secrets.BRANDDEV_API_KEY }}
          SB_S3_REGION: ${{ secrets.SB_S3_REGION }}
          SB_S3_ACCESS_KEY_ID: ${{ secrets.SB_S3_ACCESS_KEY_ID }}
          SB_S3_SECRET_ACCESS_KEY: ${{ secrets.SB_S3_SECRET_ACCESS_KEY }}
          SB_S3_BUCKET_NAME: ${{ secrets.SB_S3_BUCKET_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

      - name: Deploy to Lambda
        run: npx serverless deploy --stage production --verbose
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BRANDDEV_API_KEY: ${{ secrets.BRANDDEV_API_KEY }}
          SB_S3_REGION: ${{ secrets.SB_S3_REGION }}
          SB_S3_ACCESS_KEY_ID: ${{ secrets.SB_S3_ACCESS_KEY_ID }}
          SB_S3_SECRET_ACCESS_KEY: ${{ secrets.SB_S3_SECRET_ACCESS_KEY }}
          SB_S3_BUCKET_NAME: ${{ secrets.SB_S3_BUCKET_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

      - name: Get deployment info
        run: npx serverless info --stage production
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BRANDDEV_API_KEY: ${{ secrets.BRANDDEV_API_KEY }}
          SB_S3_REGION: ${{ secrets.SB_S3_REGION }}
          SB_S3_ACCESS_KEY_ID: ${{ secrets.SB_S3_ACCESS_KEY_ID }}
          SB_S3_SECRET_ACCESS_KEY: ${{ secrets.SB_S3_SECRET_ACCESS_KEY }}
          SB_S3_BUCKET_NAME: ${{ secrets.SB_S3_BUCKET_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

  test-deployment:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test custom domain health endpoint
        run: |
          echo "Testing custom domain: https://mjml-generator-service.springbot.com"
          curl -f "https://mjml-generator-service.springbot.com/" || exit 1
          echo "✅ Custom domain is working!"

      - name: Test API Gateway endpoint
        run: |
          echo "Testing API Gateway endpoint..."
          ENDPOINT=$(npx serverless info --stage production --verbose | grep "endpoints:" -A 10 | grep "GET" | head -1 | awk '{print $3}')
          echo "Testing API Gateway endpoint: $ENDPOINT"
          curl -f "$ENDPOINT" || exit 1
          echo "✅ API Gateway endpoint is working!"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BRANDDEV_API_KEY: ${{ secrets.BRANDDEV_API_KEY }}
          SB_S3_REGION: ${{ secrets.SB_S3_REGION }}
          SB_S3_ACCESS_KEY_ID: ${{ secrets.SB_S3_ACCESS_KEY_ID }}
          SB_S3_SECRET_ACCESS_KEY: ${{ secrets.SB_S3_SECRET_ACCESS_KEY }}
          SB_S3_BUCKET_NAME: ${{ secrets.SB_S3_BUCKET_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }} 